name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Blacken:
    name: 'Formatting and linting'
    timeout-minutes: 2
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/tools-requirements.txt') }}
      - name: Install tools
        run: |
          python -m pip install -U pip
          python -m pip install -r tools-requirements.txt
      - name: Run Black
        id: black
        run: black --check trio_parallel
        continue-on-error: true
      - name: Run flake8
        id: flake8
        run: flake8 trio_parallel/ --ignore=D,E,W,F401,F403,F405,F821,F822
        continue-on-error: true
      - name: Fail on error
        if: steps.black.outcome != 'success' || steps.flake8.outcome != 'success'
        run: exit 1

  Windows:
    name: 'Windows (${{ matrix.python }}, ${{ matrix.arch }})'
    timeout-minutes: 10
    runs-on: 'windows-latest'
    strategy:
      fail-fast: false
      matrix:
        python:
          - '3.6'
          - '3.7'
          - '3.8'
          - '3.9'
        arch: ['x86', 'x64']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '${{ matrix.python }}'
          architecture: '${{ matrix.arch }}'
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ matrix.arch }}-${{ matrix.python }}-${{ hashFiles('**/test-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.arch }}-${{ matrix.python }}-
            ${{ runner.os }}-pip-
      - name: Run tests
        run: ./ci.sh
        shell: bash
        env:
          # Should match 'name:' up above
          JOB_NAME: 'Windows (${{ matrix.python }}, ${{ matrix.arch }})'

  Linux:
    name: 'Linux (${{ matrix.python }})'
    timeout-minutes: 10
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false
      matrix:
        python:
          - '3.6'
          - '3.7'
          - '3.8'
          - '3.9'
          - 'pypy-3.6'
          - 'pypy-3.7'
          - 'pypy-3.7-nightly'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '${{ matrix.python }}'
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python }}-${{ hashFiles('**/test-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python }}-
            ${{ runner.os }}-pip-
      - name: Make executable
        run: chmod +x ./ci.sh
      - name: Run tests
        run: ./ci.sh
        env:
          # Should match 'name:' up above
          JOB_NAME: 'Linux (${{ matrix.python }})'

  macOS:
    name: 'macOS (${{ matrix.python }})'
    timeout-minutes: 10
    runs-on: 'macos-latest'
    strategy:
      fail-fast: false
      matrix:
        python:
          - '3.6'
          - '3.7'
          - '3.8'
          - '3.9'
          - 'pypy-3.6'
          - 'pypy-3.7'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '${{ matrix.python }}'
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-pip-${{ matrix.python }}-${{ hashFiles('**/test-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python }}-
            ${{ runner.os }}-pip-
      - name: Run tests
        run: ./ci.sh
        env:
          # Should match 'name:' up above
          JOB_NAME: 'macOS (${{ matrix.python }})'
